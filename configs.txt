{
  'Ridge':
    {
    'alpha': 1
    },
  'Lasso':
    {
    'alpha': 1
    },
  'AdaptiveLasso':
    {
    'alpha': 1,
    'n_itr': 5
    },
  'GroupLasso':
    {
    'groups': [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\
              2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,\
              3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,\
              -1,-1,-1]
    },
  'ElasticNet':
    {
    'l1_ratio': 1
    },
  'DecisionTree':
    {
    'max_depth': -1
    },
  'AdaBoost':
    {
    'n_estimators': 50
    },
  'GradientBoost':
    {
    'n_estimators': 50
    },
  'RandomForest':
    {
    'n_estimators': 50
    },
  'KernelSVM':
    {
    'kernel': 'poly',
    'degree': 20
    },
  'NeuralNetwork':
    {
    'epochs': 300,
    'batch_size': 50
    },
  'ConvolutionalNeuralNetwork':
    {
    'height': 28,
    'width': 28,
    'dimension': 1,
    'classes': 10,
    'epochs': 500,
    'batch_size': 50
    },
  'LSTM':
    {
    'epochs': 500,
    'batch_size': 50,
    'lookback': 7,
    'num_of_cells': 4
    },
  'PCA':
    {
    'n_components':10
    },
  'PLS':
    {
    'n_components':10
    }
}
